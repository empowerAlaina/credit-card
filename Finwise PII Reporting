drop table #Credit_Card_User
drop table #Credit_Card_Address
drop table #Credit_Card_Cell


SELECT
a.creditcardloanid as EmpowerCreditCardLoanId,
a.externalid,
a.userid as EmpowerUserId,
case when externalid is not null then 'Credit' else null end as ProductType,
case when externalid is not null then 'Consumer' else null end as TypeOfCard,
a.createdAt as AccountOriginationDate,
b.DateCreated as UserCreatedDate,
case when b.DateCreated is not null then 'Y' else null end as eSignIndicator,
b.DateCreated as esignConsentDate,
b.DateModified,
b.FirstName,
b.lastName,
b.SocialSecurityNumber,
b.SocialSecurityNumberComputed,
b.DateOfBirth,
b.email
into #Credit_Card_User
from CreditCardLoans a
left join [user] b
on a.userid = b.userid;

SELECT
a.*,
b.AddressLine1,
b.AddressLine2,
b.State,
b.Zip,
b.City
into #Credit_Card_Address
from #Credit_Card_User a
left join [UserAddresses] b
on a.EmpowerUserId = b.userid
where [Primary] = 1
and AddressType = 0;

select
a.*,
b.CellNumber,
b.DateAdded as DateCellAdded
into #Credit_Card_Cell
from #Credit_Card_Address a
left join [UserCellPhones] b
on a.EmpowerUserId = b.userid
where IsPrimary = 1;

--CHA
select  * from creditcardloandisclosures order by userid
select count(*), count(distinct document) from creditcardloandisclosures order by userid

select a.*,
b.CreditCardLoanDisclosureId as CardholderAgreementID -- need to figure out why there are duplicates and eliminate them 
into #CHA
from #Credit_Card_Cell a
left join creditcardloandisclosures b
on a.EmpowerUserId = b.userid;

select * from #CHA order by EmpowerUserId

--KYC

select 
a.*,
b.userloanapplicationid,
b.STATUS as app_status,
b.createdat as application_date
from #Credit_Card_Cell a
left join  [UserLoanApplications] b
on a.userid = b.userid
and account_origination_date = ;

drop table #kyc;
drop table #phone_risk_score;
drop table #email_risk_score;
drop table #app_credit_score;
drop table #app_device_info;
drop table #app_device_info3;
drop table #app_device_info4;
drop table  #app_device;

select 
a.userloanapplicationid,
a.UserCreditModelId,
a.STATUS as AppStatus,
a.createdat,
convert(varchar(10), a.createdat) as ApplicationDate,
a.userid,
b.userkycid,
b.userkycuserloanapplicationid,
c.createdatutc,
c.status, -- this is the result. need to translate enum
case when b.userkycid is not null then 'Socure' else null end as KYCVendor,
c.SocureReferenceId as KYCIDNumber,
c.UserKycActionResultId,
row_number() over(partition by c.userkycid order by c.createdatutc desc) as socure_rank
into #kyc
from [UserLoanApplications] a
left join [UserKycUserLoanApplication] b
on a.userloanapplicationid = b.userloanapplicationid
left join [UserKycActionResults] c
on b.userkycid = c.userkycid
where createdAt >= '2024-04-01'
and a.STATUS in (3,4); --4 is accepted



SELECT
a.*,
b.score as PhoneRiskScore
into #phone_risk_score
from #kyc a
left join [UserKycActionResultScore] b
on a.UserKycActionResultId = b.UserKycActionResultId
where module = 'PhoneRisk'
and a.socure_rank = 1;

SELECT
a.*,
b.score as EmailRiskScore
into #email_risk_score
from #phone_risk_score a
left join [UserKycActionResultScore] b
on a.UserKycActionResultId = b.UserKycActionResultId
where module = 'EmailRisk';


---App Credit Scores
select 
l.*,
s.ficoscore as AppFicoScore
into #app_credit_score 
from #email_risk_score l
left join UserCreditModel m
on l.UserCreditModelId = m.UserCreditModelId
left join UserCreditVariableAries a
on m.UserCreditVariableId = a.UserCreditVariableId
left join UserCreditSummary s 
on a.UserCreditSummaryId = s.UserCreditSummaryId;


--Device ID and IP Address
select a.*,  
b.DeviceId,
b.createdatutc as deviceCreatedAtUtc,
b.lastmodifiedatutc,
b.ip,
b.timestamputc,
convert(varchar(10), b.timestamputc) as deviceDate
into #app_device_info
from #app_credit_score a
left join [UserDeviceInformationData] b
on a.userid = b.userid
where a.createdat >= timestamputc; --filtering to device information logged before the application, assuming the session logging starts at session initiation 

select a.*,
row_number() over(partition by userloanapplicationid order by timestamputc desc) as timestamp_rank --taking device info logged closest to application
into #app_device_info3
from #app_device_info a;

select a.*
into #app_device_info4 
from #app_device_info3 a
where timestamp_rank = 1;

select a.*,
b.ip as applicationIP,
b.DeviceId as ApplicationDeviceID
into #app_device
from #app_credit_score a
left join #app_device_info4 b
on a.userloanapplicationid = b.userloanapplicationid;



--------------------------------Ongoing update data--------------------------------


drop table #Last_IP;
drop table #Last_Device;
drop table #last_access_data;
drop table #credit_score_profile;
drop table #credit_score;
drop table #credit_score2;
drop table #Last_email;
drop table #Last_address;
drop table #Last_cell;

--Last IP Address and Access Date
SELECT
userid as EmpowerUserId,
DateAccessed as LastAccessDate,
IpAddress as LastAccessIpAddress,
row_number() over(partition by userid order by DateAccessed desc) as timestamp_rank --most recent 
into #Last_IP
from [AccessLog]
where userid in (select EmpowerUserId from #CHA)
and DateAccessed >= '2023-12-01';


--Last Access Device ID
select a.*,
b.DeviceID as LastAccessDeviceID,
b.timestampUtc,
row_number() over(partition by userid order by timestamputc desc) as timestamp_rank2 --most recent 
into #last_device
from #Last_IP a
left join [UserDeviceInformationData] b
on a.EmpowerUserId = b.UserId
where timestamp_rank = 1
and timestamputc >= '2023-11-01';

select 
EmpowerUserId,
LastAccessDate,
LastAccessIpAddress,
LastAccessDeviceID
into #last_access_data
from #last_device
where timestamp_rank2 = 1;

--Last credit score
select a.*,
b.usercreditscoreprofileid
into #credit_score_profile 
from  #last_access_data a 
left join userCreditScoreProfiles b
on a.EmpowerUserId = b.userid;


select a.*,
b.score as LastScore,
b.inquirydate,
b.usercreditscorereportid,
b.createdatutc,
row_number() over(partition by b.usercreditscoreprofileid order by inquirydate desc) as timestamp_rank --most recent 
into #credit_score
from #credit_score_profile a 
left join userCreditScoreReports b 
on a.usercreditscoreprofileid = b.usercreditscoreprofileid;


select a.*
into #credit_score2
from #credit_score a
where timestamp_rank = 1
and LastScore is not null;

select a.*,
b.LastScore,
b.createdatutc as LastScoreDate
into #Last_Score
from #credit_score_profile a
left join #credit_score2 b
on a.EmpowerUserId = b.EmpowerUserId;

--Updated contact info 
select a.*, 
b.email as LastEmail
into #Last_email 
from #Last_Score a
left join [user] b
on a.EmpowerUserId = b.userid;


SELECT
a.*,
b.AddressLine1 as LastAddressLine1,
b.AddressLine2 as LastAddressLine2,
b.State as LastState,
b.Zip as LastZip,
b.City as LastCity
into #Last_Address
from #Last_email a
left join [UserAddresses] b
on a.EmpowerUserId = b.userid
where [Primary] = 1
and AddressType = 0;

select
a.*,
b.CellNumber as LastCellNumber
into #Last_Cell
from #Last_Address a
left join [UserCellPhones] b
on a.EmpowerUserId = b.userid
where IsPrimary = 1;

--Close account data
--Need to join at account level once we start to have more than one account
select a.*,
b.CloseReason,
b.ClosedAt,
b.ChargeOffStatus
into #close_account_status
from #Last_Address a
left join CreditCardLoans b
on a.EmpowerUserId = b.userid; 




--------------------------------Finwise Reports--------------------------------
--Accounts
select * from  #Credit_Card_Cell;

--KYC, Fraud Risk Scores, Application Credit Score
SELECT top 100
userid as EmpowerUserId,
ApplicationDate,
KYCVendor,
KYCIDNumber,
case when status = 0 then 'Pass' else null end as KYC_status, --get remaining enum values 
PhoneRiskScore,
EmailRiskScore,
AppFicoScore,
applicationIP,
ApplicationDeviceID
from #app_device; 


--Updated data
SELECT
EmpowerUserId,
LastAccessDate,
LastAccessIpAddress,
LastAccessDeviceID,
LastScore,
LastScoreDate,
LastEmail,
LastAddressLine1,
LastAddressLine2,
LastState,
LastZip,
LastCity,
CloseReason,
ClosedAt,
ChargeOffStatus
from #close_account_status;

--Report List:
--1. Account origination data - #Credit_Card_Cell joined to #app_credit_score. For Beta 1, will provide daily until we have booked 300 accounts
--2. Monthly update on existing CC users -- last credit score, email address, street address, phone, last account access date, device ID at last login, IP address at last login, account close flag, account close timestamp 
--option A: provide as two separate files. option B: provide as 1 file where the first columns would always be unchanged and then i would join and overwrite the second set of columns to the most recent data

--other notes: we don't store SMS opt in in our main SQL DB. We can provide it separately and work towards pulling it into the main DB so we can automatically include this data in the future. follow up with Alex Darrow 
--it appears that about 0.25% of thrive applicants do not have any device data logged with their userids. need to figure out why 


